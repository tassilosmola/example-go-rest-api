// Code generated by mockery v2.16.0. DO NOT EDIT.

package api

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockRouter is an autogenerated mock type for the Router type
type MockRouter struct {
	mock.Mock
}

// DELETE provides a mock function with given fields: uri, f
func (_m *MockRouter) DELETE(uri string, f func(http.ResponseWriter, *http.Request)) {
	_m.Called(uri, f)
}

// GET provides a mock function with given fields: uri, f
func (_m *MockRouter) GET(uri string, f func(http.ResponseWriter, *http.Request)) {
	_m.Called(uri, f)
}

// POST provides a mock function with given fields: uri, f
func (_m *MockRouter) POST(uri string, f func(http.ResponseWriter, *http.Request)) {
	_m.Called(uri, f)
}

// SERVE provides a mock function with given fields: port
func (_m *MockRouter) SERVE(port string) {
	_m.Called(port)
}

type mockConstructorTestingTNewMockRouter interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockRouter creates a new instance of MockRouter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockRouter(t mockConstructorTestingTNewMockRouter) *MockRouter {
	mock := &MockRouter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
